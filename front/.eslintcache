<<<<<<< HEAD
[{"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/index.js":"1","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/App.js":"2","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/reportWebVitals.js":"3","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/header.js":"4","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/content.js":"5","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/footer.js":"6","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/regist.js":"7","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/board.js":"8","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/til.js":"9","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/nav_attendance.js":"10","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/boardInput.js":"11","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/content_attendance.js":"12"},{"size":585,"mtime":1613122527814,"results":"13","hashOfConfig":"14"},{"size":2701,"mtime":1613488343381,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612342785593,"results":"16","hashOfConfig":"14"},{"size":2131,"mtime":1613486288319,"results":"17","hashOfConfig":"14"},{"size":3000,"mtime":1613488343383,"results":"18","hashOfConfig":"14"},{"size":255,"mtime":1613119408634,"results":"19","hashOfConfig":"14"},{"size":3504,"mtime":1613486288319,"results":"20","hashOfConfig":"14"},{"size":1429,"mtime":1613488343382,"results":"21","hashOfConfig":"14"},{"size":240,"mtime":1613122527813,"results":"22","hashOfConfig":"14"},{"size":361,"mtime":1613115896295,"results":"23","hashOfConfig":"14"},{"size":1671,"mtime":1613488343383,"results":"24","hashOfConfig":"14"},{"size":1656,"mtime":1613486288319,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12ums7s",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/index.js",[],["54","55"],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/App.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/reportWebVitals.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/header.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/content.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/footer.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/regist.js",["56"],"import React, { Component, useRef } from \"react\";\nimport { useForm } from 'react-hook-form';\n\n\nfunction Regist() {\n\nconst { register, watch, errors, handleSubmit } = useForm();\nconsole.log(watch('email'))\n//watch는 해당 데이터를 확인한다.\nconst password = useRef();\n//validate를 위해 지정해준다.\npassword.current = watch(\"password\");\nconst onSubmit = (data) => {\n  console.log('data', data)\n}\n  return (\n    <form id=\"mainform\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <div id=\"labelform\">이메일</div>\n      <input\n        class=\"maininput\"\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"이메일을 입력해주세요.\"\n      ref={register({\n        //필수입력\n        reqired: true,\n        pattern: /^\\S+@\\S+$/i })}/>\n        {errors.email &&<p class=\"alert\">이메일을 제대로 입력해주세요.</p>}\n        <div id=\"labelform\">아이디</div>\n      <input\n        class=\"maininput\"\n        name=\"id\"\n        placeholder=\"아이디를 입력해주세요.(최대 8글자)\"\n        ref={register({ required: true, maxLength: 10, pattern: \"[a-zA-Z].+\" })}\n      />\n      {errors.id && errors.id.type === \"required\" && <p class=\"alert\">아이디가 입력되지 않았습니다.</p>}\n      {errors.id && errors.id.type === \"maxLength\" && <p class=\"alert\">아이디는 8글자 이내로 입력해주세요.</p>}\n      {errors.id && errors.id.type === \"pattern\" && <p class=\"alert\">아이디는 이내로 입력해주세요.</p>}\n        <div id=\"labelform\">이름</div>\n      <input\n        class=\"maininput\"\n        name=\"name\"\n        placeholder=\"이름을 입력해주세요.(최대 10글자)\"\n        ref={register({ required: true, maxLength: 10 })}\n      />\n      {errors.name && errors.name.type === \"required\" && <p class=\"alert\">이름이 입력되지 않았습니다.</p>}\n      {errors.name && errors.name.type === \"maxLength\" && <p class=\"alert\">이름은 10글자 이내로 입력해주세요.</p>}\n      <div id=\"labelform\">비밀번호</div>\n      <input\n        class=\"maininput\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"비밀번호를 입력해주세요.(6~15글자)\"\n        ref={register({ required: true, minLength: 6, maxLength: 15 })}\n      />\n      {errors.password && errors.password.type === \"required\" && <p class=\"alert\">비밀번호가 입력되지 않았습니다.</p>}\n      {errors.password && errors.password.type === \"minLength\" && <p class=\"alert\">비밀번호는 6글자 이상 입력해주세요.</p>}\n      {errors.password && errors.password.type === \"maxLength\" && <p class=\"alert\">비밀번호는 15글자 이내로 입력해주세요.</p>}\n      <div id=\"labelform\">비밀번호 확인</div>\n      <input\n        class=\"maininput\"\n        name=\"password_confirm\"\n        type=\"password\"\n        placeholder=\"비밀번호를 입력해주세요.(6~15글자)\"\n        ref={register({\n          required: true,\n          //유효성 검사(위에서 password.current 지정해줘야함)\n          validate: (value) =>\n            value === password.current\n        })}\n      />\n      {errors.password_confirm && errors.password_confirm.type === \"required\" && <p class=\"alert\">비밀번호가 입력되지 않았습니다.</p>}\n      {errors.password_confirm && errors.password_confirm.type === \"validate\" && <p class=\"alert\">비밀번호가 일치하지 않습니다.</p>}\n      <input type=\"submit\" id=\"submit\" value=\"가입하기\"/>\n    </form>\n  );\n}\n\nexport default Regist;\n","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/board.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/til.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/nav_attendance.js",[],["57","58"],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/boardInput.js",["59","60","61"],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/content_attendance.js",["62"],"import React, { Component } from \"react\"\n\nclass ContentAttend extends Component {\n  //render 필수\n  constructor(props){\n    super(props);\n    this.state = {\n        userId: 0,\n        // period : 2,\n        totalweeks: 11,\n        attendList: [1,1,0,1,0]\n    }\n  }\n  setUserInfo = (ID, weekCnt, attList) =>{\n    this.setState({\n      userID: ID,\n      // period: prd,\n      weeks: weekCnt,\n      attendList: attList\n    })\n  }\n\n  render() {\n\n\n    console.log(\"Content attendance render\");\n    const borderStyle = {\n      border: \"1px solid black\"\n    }\n    const weekList = [];\n\n\n    for(let i =0; i <this.state.totalweeks; ++i){\n        weekList.push({weekIdx: i, attendance: this.state.attendList[i]});\n    }\n    console.log(weekList);\n\n    function convertAttend(attend) {\n      if(attend === 0){\n        return \"결석 😢\";\n      }\n      else {\n        return attend && \"출석 😊\";\n      }\n\n    }\n\n    const weekRender = weekList.map((week, i) => {\n      return (\n        <div key = {i} className = \"AttendTable\">\n\n        <div className = \"WeekIdx\">{week.weekIdx+1} 주차</div>\n        <div className = {this.state.attendList[i] === 1? \"present\" :(this.state.attendList[i] === 0 ? \"absent\": \"Undefined\")}>\n\n          {convertAttend(week.attendance)}\n\n        </div>\n\n        </div>\n      );\n    })\n\n\n    return (\n      <div className = \"wrapperAttend\">\n        <div className = \"NavAttend\">\n          <ol>\n            <li> 출석부 </li>\n            <li> 주간목표 </li>\n          </ol>\n        </div>\n\n        <div className = \"MainAttend\">\n            {weekRender}\n        </div>\n      </div>\n\n\n    )\n  }\n}\n\nexport default ContentAttend\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","replacedBy":"72"},{"ruleId":"67","severity":1,"message":"73","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":15},{"ruleId":"67","severity":1,"message":"74","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":15},{"ruleId":"67","severity":1,"message":"75","line":4,"column":17,"nodeType":"69","messageId":"70","endLine":4,"endColumn":23},{"ruleId":"67","severity":1,"message":"76","line":27,"column":11,"nodeType":"69","messageId":"70","endLine":27,"endColumn":22},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["77"],["78"],"'Content' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'borderStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/index.js":"1","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/App.js":"2","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/reportWebVitals.js":"3","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/header.js":"4","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/content.js":"5","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/footer.js":"6","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/regist.js":"7","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/board.js":"8","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/til.js":"9","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/nav_attendance.js":"10","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/boardInput.js":"11","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/content_attendance.js":"12"},{"size":585,"mtime":1613122527814,"results":"13","hashOfConfig":"14"},{"size":2728,"mtime":1613487263717,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612342785593,"results":"16","hashOfConfig":"14"},{"size":2131,"mtime":1613486288319,"results":"17","hashOfConfig":"14"},{"size":3005,"mtime":1613487104460,"results":"18","hashOfConfig":"14"},{"size":255,"mtime":1613119408634,"results":"19","hashOfConfig":"14"},{"size":3504,"mtime":1613486288319,"results":"20","hashOfConfig":"14"},{"size":1820,"mtime":1613487394619,"results":"21","hashOfConfig":"14"},{"size":240,"mtime":1613122527813,"results":"22","hashOfConfig":"14"},{"size":361,"mtime":1613115896295,"results":"23","hashOfConfig":"14"},{"size":1692,"mtime":1613487688215,"results":"24","hashOfConfig":"14"},{"size":1656,"mtime":1613486288319,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12ums7s",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/index.js",[],["55","56"],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/App.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/reportWebVitals.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/header.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/content.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/footer.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/regist.js",["57"],"import React, { Component, useRef } from \"react\";\nimport { useForm } from 'react-hook-form';\n\n\nfunction Regist() {\n\nconst { register, watch, errors, handleSubmit } = useForm();\nconsole.log(watch('email'))\n//watch는 해당 데이터를 확인한다.\nconst password = useRef();\n//validate를 위해 지정해준다.\npassword.current = watch(\"password\");\nconst onSubmit = (data) => {\n  console.log('data', data)\n}\n  return (\n    <form id=\"mainform\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <div id=\"labelform\">이메일</div>\n      <input\n        class=\"maininput\"\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"이메일을 입력해주세요.\"\n      ref={register({\n        //필수입력\n        reqired: true,\n        pattern: /^\\S+@\\S+$/i })}/>\n        {errors.email &&<p class=\"alert\">이메일을 제대로 입력해주세요.</p>}\n        <div id=\"labelform\">아이디</div>\n      <input\n        class=\"maininput\"\n        name=\"id\"\n        placeholder=\"아이디를 입력해주세요.(최대 8글자)\"\n        ref={register({ required: true, maxLength: 10, pattern: \"[a-zA-Z].+\" })}\n      />\n      {errors.id && errors.id.type === \"required\" && <p class=\"alert\">아이디가 입력되지 않았습니다.</p>}\n      {errors.id && errors.id.type === \"maxLength\" && <p class=\"alert\">아이디는 8글자 이내로 입력해주세요.</p>}\n      {errors.id && errors.id.type === \"pattern\" && <p class=\"alert\">아이디는 이내로 입력해주세요.</p>}\n        <div id=\"labelform\">이름</div>\n      <input\n        class=\"maininput\"\n        name=\"name\"\n        placeholder=\"이름을 입력해주세요.(최대 10글자)\"\n        ref={register({ required: true, maxLength: 10 })}\n      />\n      {errors.name && errors.name.type === \"required\" && <p class=\"alert\">이름이 입력되지 않았습니다.</p>}\n      {errors.name && errors.name.type === \"maxLength\" && <p class=\"alert\">이름은 10글자 이내로 입력해주세요.</p>}\n      <div id=\"labelform\">비밀번호</div>\n      <input\n        class=\"maininput\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"비밀번호를 입력해주세요.(6~15글자)\"\n        ref={register({ required: true, minLength: 6, maxLength: 15 })}\n      />\n      {errors.password && errors.password.type === \"required\" && <p class=\"alert\">비밀번호가 입력되지 않았습니다.</p>}\n      {errors.password && errors.password.type === \"minLength\" && <p class=\"alert\">비밀번호는 6글자 이상 입력해주세요.</p>}\n      {errors.password && errors.password.type === \"maxLength\" && <p class=\"alert\">비밀번호는 15글자 이내로 입력해주세요.</p>}\n      <div id=\"labelform\">비밀번호 확인</div>\n      <input\n        class=\"maininput\"\n        name=\"password_confirm\"\n        type=\"password\"\n        placeholder=\"비밀번호를 입력해주세요.(6~15글자)\"\n        ref={register({\n          required: true,\n          //유효성 검사(위에서 password.current 지정해줘야함)\n          validate: (value) =>\n            value === password.current\n        })}\n      />\n      {errors.password_confirm && errors.password_confirm.type === \"required\" && <p class=\"alert\">비밀번호가 입력되지 않았습니다.</p>}\n      {errors.password_confirm && errors.password_confirm.type === \"validate\" && <p class=\"alert\">비밀번호가 일치하지 않습니다.</p>}\n      <input type=\"submit\" id=\"submit\" value=\"가입하기\"/>\n    </form>\n  );\n}\n\nexport default Regist;\n","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/board.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/til.js",[],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/nav_attendance.js",[],["58","59"],"/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/boardInput.js",["60","61","62"],"import React, { Component } from \"react\"\nimport \"../assets/css/boardInput.css\"\nimport Content from \"./content\"\nimport { Route, Switch, withRouter } from \"react-router-dom\"\n\nclass BoardInput extends Component {\n  go = () => {\n    this.props.history.goBack()\n  }\n  render(history) {\n    console.log(\"Board render\")\n    return (\n      <div class=\"addArticle-wrapper\">\n        <div className=\"addArticle_title\">\n          <h1>글쓰기</h1>\n        </div>\n\n        <div className=\"addArticle_container\">\n          <div className=\"addArticle_form\">\n            <form\n              action=\"/\"\n              method=\"post\"\n              onSubmit={function (e) {\n                e.preventDefault()\n                this.props.onSubmit(e.target.title.value, e.target.desc.value)\n                alert(\"goood\")\n              }.bind(this)}\n            >\n              <div className=\"addArticle_title\">\n                <h2>제목</h2>\n                <input type=\"text\" name=\"title\"></input>\n              </div>\n              <div className=\"addArticle_category\">\n                <h2>분류</h2>\n                <select>\n                  <option value=\"article\">article</option>\n                  <option value=\"til\">til</option>\n                </select>\n              </div>\n              <div className=\"addArticle_contents\">\n                <h2>내용</h2>\n                <textarea name=\"desc\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n              </div>\n              <div className=\"addArticle_submit\">\n                <button onClick={this.go}>submit</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(BoardInput)\n","/Users/hxmkim/Documents/GitHub/blooming-web-project/front/src/components/content_attendance.js",["63"],"import React, { Component } from \"react\"\n\nclass ContentAttend extends Component {\n  //render 필수\n  constructor(props){\n    super(props);\n    this.state = {\n        userId: 0,\n        // period : 2,\n        totalweeks: 11,\n        attendList: [1,1,0,1,0]\n    }\n  }\n  setUserInfo = (ID, weekCnt, attList) =>{\n    this.setState({\n      userID: ID,\n      // period: prd,\n      weeks: weekCnt,\n      attendList: attList\n    })\n  }\n\n  render() {\n\n\n    console.log(\"Content attendance render\");\n    const borderStyle = {\n      border: \"1px solid black\"\n    }\n    const weekList = [];\n\n\n    for(let i =0; i <this.state.totalweeks; ++i){\n        weekList.push({weekIdx: i, attendance: this.state.attendList[i]});\n    }\n    console.log(weekList);\n\n    function convertAttend(attend) {\n      if(attend === 0){\n        return \"결석 😢\";\n      }\n      else {\n        return attend && \"출석 😊\";\n      }\n\n    }\n\n    const weekRender = weekList.map((week, i) => {\n      return (\n        <div key = {i} className = \"AttendTable\">\n\n        <div className = \"WeekIdx\">{week.weekIdx+1} 주차</div>\n        <div className = {this.state.attendList[i] === 1? \"present\" :(this.state.attendList[i] === 0 ? \"absent\": \"Undefined\")}>\n\n          {convertAttend(week.attendance)}\n\n        </div>\n\n        </div>\n      );\n    })\n\n\n    return (\n      <div className = \"wrapperAttend\">\n        <div className = \"NavAttend\">\n          <ol>\n            <li> 출석부 </li>\n            <li> 주간목표 </li>\n          </ol>\n        </div>\n\n        <div className = \"MainAttend\">\n            {weekRender}\n        </div>\n      </div>\n\n\n    )\n  }\n}\n\nexport default ContentAttend\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"68","severity":1,"message":"74","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":15},{"ruleId":"68","severity":1,"message":"75","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":15},{"ruleId":"68","severity":1,"message":"76","line":4,"column":17,"nodeType":"70","messageId":"71","endLine":4,"endColumn":23},{"ruleId":"68","severity":1,"message":"77","line":27,"column":11,"nodeType":"70","messageId":"71","endLine":27,"endColumn":22},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["78"],["79"],"'Content' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'borderStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> Front/master-fe
